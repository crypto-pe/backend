make all --print-data-base --no-builtin-variables --no-builtin-rules --question
make: *** No rule to make target 'all'.  Stop.

# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sun May 29 02:54:01 2022

# Variables

# 'override' directive
GNUMAKEFLAGS := 
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
DESKTOP_SESSION = i3
# default
.SHELLFLAGS := -c
# makefile (from 'Makefile', line 5)
GITCOMMIT = $(shell git log -1 --date=iso --pretty=format:%H)
# environment
XDG_SESSION_CLASS = user
# environment
XDG_SESSION_TYPE = x11
# environment
VSCODE_LOG_NATIVE = false
# environment
NVM_INC = /home/soulninja/.nvm/versions/node/v16.14.0/include/node
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
XAUTHORITY = /run/user/1000/gdm/Xauthority
# environment
GDMSESSION = i3
# default
MAKE_VERSION := 4.2.1
# makefile
CURDIR := /home/soulninja/dev/github.com/crypto-pe/backend
# makefile
SHELL = /bin/sh
# makefile (from 'Makefile', line 8)
ROOT_DIR := /home/soulninja/dev/github.com/crypto-pe/backend
# environment
VSCODE_NLS_CONFIG = {"locale":"en-gb","availableLanguages":{},"_languagePackSupport":true}
# makefile (from 'Makefile', line 6)
GITCOMMITDATE = $(shell git log -1 --date=iso --pretty=format:%cd)
# environment
_ = /usr/bin/code
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-i3:/etc/xdg
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# automatic
@F = $(notdir $@)
# environment
USERNAME = soulninja
# environment
MANDATORY_PATH = /usr/share/gconf/i3.mandatory.path
# environment
XDG_DATA_DIRS = /usr/share/i3:/home/soulninja/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# makefile (from 'Makefile', line 4)
VERSION = $(if $(GITTAG),$(GITTAG),$(LONGVERSION))
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-adbd1311-84f6-4966-a81c-25f88e22cbc2.sock
# environment
VSCODE_CWD = /home/soulninja/dev/github.com/crypto-pe/backend
# environment
GOPROXY = https://proxy.golang.org,direct
# environment
QT_STYLE_OVERRIDE = adwaita
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/soulninja/.nvm/versions/node/v16.14.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin:/usr/local/go/bin:/home/soulninja/go/bin
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# environment
LSCOLORS = Gxfxcxdxbxegedabagacad
# environment
XDG_RUNTIME_DIR = /run/user/1000
# environment
WINDOWID = 52428802
# makefile (from 'Makefile', line 1)
GITTAG = $(shell git describe --exact-match --tags HEAD 2>/dev/null || :)
# environment
ALACRITTY_LOG = /tmp/Alacritty-5883.log
# environment
GOPATH = /home/soulninja/go/bin
# makefile (from 'Makefile', line 7)
GITCOMMITAUTHOR = $(shell git log -1 --date=iso --pretty="format:%an")
# environment
NVM_BIN = /home/soulninja/.nvm/versions/node/v16.14.0/bin
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# makefile (from 'Makefile', line 3)
LONGVERSION = $(shell git describe --tags --long --abbrev=8 --always HEAD)$(echo -$GITBRANCH | tr / - | grep -v '\-master' || :)
# environment
LS_COLORS = no=00:fi=00:di=01;34:ln=00;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=41;33;01:ex=00;32:*.cmd=00;32:*.exe=01;32:*.com=01;32:*.bat=01;32:*.btm=01;32:*.dll=01;32:*.tar=00;31:*.tbz=00;31:*.tgz=00;31:*.rpm=00;31:*.deb=00;31:*.arj=00;31:*.taz=00;31:*.lzh=00;31:*.lzma=00;31:*.zip=00;31:*.zoo=00;31:*.z=00;31:*.Z=00;31:*.gz=00;31:*.bz2=00;31:*.tb2=00;31:*.tz2=00;31:*.tbz2=00;31:*.avi=01;35:*.bmp=01;35:*.fli=01;35:*.gif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mng=01;35:*.mov=01;35:*.mpg=01;35:*.pcx=01;35:*.pbm=01;35:*.pgm=01;35:*.png=01;35:*.ppm=01;35:*.tga=01;35:*.tif=01;35:*.xbm=01;35:*.xpm=01;35:*.dl=01;35:*.gl=01;35:*.wmv=01;35:*.aiff=00;32:*.au=00;32:*.mid=00;32:*.mp3=00;32:*.ogg=00;32:*.voc=00;32:*.wav=00;32:
# environment
XDG_SESSION_DESKTOP = i3
# environment
SSH_AUTH_SOCK = /tmp/ssh-CC2xaG8knm4C/agent.1710
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :1
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /home/soulninja/dev/github.com/crypto-pe/backend
# environment
QT_QPA_PLATFORMTHEME = gtk3
# default
.LOADED := 
# environment
XDG_SEAT = seat0
# environment
SSH_AGENT_PID = 1781
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = i3
# environment
GTK_MODULES = gail:atk-bridge
# environment
GOMODCACHE = /home/soulninja/go/bin/pkg/mod
# environment
HOME = /home/soulninja
# environment
VSCODE_CLI = 1
# environment
VSCODE_CODE_CACHE_PATH = /home/soulninja/.config/Code/CachedData/c3511e6c69bb39013c4a4b7b9566ec1ca73fc4d5
# environment
LOGNAME = soulninja
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
NVM_CD_FLAGS = -q
# environment
ZSH = /home/soulninja/.oh-my-zsh
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XDG_VTNR = 2
# environment
MAKELEVEL := 0
# environment
COLORTERM = truecolor
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 1
# environment
XDG_SESSION_ID = 2
# environment
USER = soulninja
# makefile
.DEFAULT_GOAL := postgres
# environment
XDG_CURRENT_DESKTOP = i3
# environment
LESS = -R
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
I3SOCK = /run/user/1000/i3/ipc-socket.1710
# default
MAKE_COMMAND := make
# environment
OLDPWD = /home/soulninja/dev/github.com/crypto-pe/backend/testing-client
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# environment
LANGUAGE = en_IN:en
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-aae0e67c-1.67.2-main.sock
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
NVM_DIR = /home/soulninja/.nvm
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
GDK_BACKEND = x11
# automatic
+F = $(notdir $+)
# environment
NO_AT_BRIDGE = 1
# environment
QT_ACCESSIBILITY = 1
# environment
DEFAULTS_PATH = /usr/share/gconf/i3.default.path
# 'override' directive
.SHELLSTATUS := 0
# default
MAKEFILES := 
# makefile (from 'Makefile', line 2)
GITBRANCH = $(shell git rev-parse --abbrev-ref HEAD 2>/dev/null || :)
# automatic
<F = $(notdir $<)
# environment
PAGER = less
# environment
LC_ALL = C
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# environment
CHROME_DESKTOP = code-url-handler.desktop
# environment
WINDOWPATH = 2
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# default
.RECIPEPREFIX := 
# environment
LANG = C
# environment
TERM = alacritty
# environment
VSCODE_PID = 7760
# variable set hash-table stats:
# Load=118/1024=12%, Rehash=0, Collisions=18/154=12%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2049, inode 866710): 24 files, no impossibilities.

# 24 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

postgres:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 14):
	docker run --name postgres12 -p 5432:5432 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -d postgres:12-alpine

run_bin:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 39):
	./bin/api-server --config=./etc/example.conf

# Not a target:
all:
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.

build-docker:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 53):
	sudo docker buildx build --platform=linux/amd64 -f Dockerfile -t asia-south1-docker.pkg.dev/crypto-pe-351511/cryptope/api:${VERSION} --build-arg VERSION=${VERSION} --build-arg GITCOMMIT=${GITCOMMIT} --build-arg GITBRANCH=${GITBRANCH} .
	sudo docker push asia-south1-docker.pkg.dev/crypto-pe-351511/cryptope/api:${VERSION}

.PHONY: postgres createdb dropdb migrate_up migrate_down migrate_create sqlc_generate run proto
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

 
# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-05-28 16:54:44.0779575
#  File has been updated.
#  Successfully updated.

proto:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 42):
	go generate ./proto/...

createdb:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 17):
	docker exec -it postgres12 createdb --username=postgres --owner=postgres cryptope

sqlc_generate:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 32):
	docker run --rm -v $(ROOT_DIR):/src -w /src kjconroy/sqlc generate

migrate_create:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 29):
	go run -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate create -ext sql -dir data/migrations -seq $(FILE_NAME)

build-api:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 45):
	GOGC=off \
	go build -tags='$(BUILDTAGS)' \
	-o $(ROOT_DIR)/bin/api-server \
	-gcflags='-e' \
	-ldflags='-X "github.com/crypto-pe/backend.VERSION=$(VERSION)" -X "github.com/crypto-pe/backend.GITBRANCH=$(GITBRANCH)" -X "github.com/crypto-pe/backend.GITCOMMIT=$(GITCOMMIT)" -X "github.com/crypto-pe/backend.GITCOMMITDATE=$(GITCOMMITDATE)" -X "github.com/crypto-pe/backend.GITCOMMITAUTHOR=$(GITCOMMITAUTHOR)"' \
	./cmd/api-server

migrate_up:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 23):
	go run -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate -source file://data/migrations -database postgres://postgres:postgres@localhost:5432/cryptope?sslmode=disable up

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

make:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 39):
	./bin/api-server --config=./etc/example.conf

run:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 35):
	@go run github.com/VojtechVitek/rerun/cmd/rerun -watch ./ -run \
		sh -c 'make build-api && ./bin/api-server --config=./etc/example.conf'

dropdb:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 20):
	docker exec -it postgres12 dropdb -U postgres cryptope

migrate_down:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 26):
	go run -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate  -source file://data/migrations -database postgres://postgres:postgres@localhost:5432/cryptope?sslmode=disable down 1

# files hash-table stats:
# Load=18/1024=2%, Rehash=0, Collisions=5/46=11%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 42 / storage = 354 B / avg = 8 B
# current buf: size = 8162 B / used = 354 B / count = 42 / avg = 8 B

# strcache performance: lookups = 70 / hit rate = 40%
# hash-table stats:
# Load=42/8192=1%, Rehash=0, Collisions=1/70=1%
# Finished Make data base on Sun May 29 02:54:01 2022

 
